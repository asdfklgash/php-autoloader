2010-01-09 Markus Malkusch <markus@malkusch.de>

    * classes/fileIterator/AutoloaderFileIterator_PriorityList.php (AutoloaderFileIterator_PriorityList):
    The AutoloaderFileIterator_PriorityList prefers *.inc and *.php files.
    Additionally the prefered files are ordered by the Levenshtein distance to the
    class name.
    
    * classes/fileIterator/AutoloaderFileIterator_SimpleCached.php (AutoloaderFileIterator_SimpleCached):
    Once a AutoloaderFileIterator_Simple is completely iterated the found
    files are cached in an ArrayIterator. This is the default iterator.
       
    * classes/Autoloader.php (Autoloader::setPath()):
    Autoloader::setPath() became private. The path is only set by the constructor.
    If the constructor is empty, the path will be guessed.
    
2010-01-08 Markus Malkusch <markus@malkusch.de>

    * classes/AbstractAutoloader.php (AbstractAutoloader::isRegistered()):
    Using strict mode to avoid the endless recursion.
    
    * classes/Autoloader.php (Autoloader::setFileIterator()):
    The file search is using a dedicated object (AutoloaderFileIterator)
    for iterating through the filesystem. Therefore the methods addSkipPattern()
    and setSkipFilesize() are moved into the AutoloaderFileIterator class.
    
    * classes/Autoloader.php (Autoloader::setPath()):
    Throws AutoloaderException_ClassPath if realpath() fails.
    
2009-12-18 Markus Malkusch <markus@malkusch.de>

    * classes/Autoloader.php (InternalAutoloader::remove()):
    After removing an Autoloader a previously by normalization
    removed Autoloader could become activated again.
    
2009-12-15 Markus Malkusch <markus@malkusch.de>

    * classes/InternalAutoloader.php (InternalAutoloader):
    Internal classes needed by the Autoloader itself are handled with
    the InternalAutolader.
    
    * classes/Autoloader.php (Autoloader::registerInternalClass())
    Autoloader::registerInternalClass() is deprecated and removed.
    InternalAutoloader::getInstance()->registerClass() is used instead.
    
    * classes/OldPHPAPI.php (OldPHPAPI::checkAPI())
    Some functions are missing in older PHP 5 APIs.
    If needed, these missing functions are implemented. 

2009-12-11 Markus Malkusch <markus@malkusch.de>

    * classes/Autoloader.php (Autoloader::setPath()):
    For each class path one single Autoloader instance is responsable.
    That allows to use individual configurations per class path and
    to reuse an index for common class paths in different projects.
    This is a major change which affects other classes and methods.

2009-12-10 Markus Malkusch <markus@malkusch.de>

    * classes/index/AutoloaderIndex.php (AutoloaderIndex::getContext()):
    Class paths are sorted for generating the context.
    
2009-12-09 Markus Malkusch <markus@malkusch.de>

    * classes/Autoloader.php (Autoloader::getNormalizeSearchPaths()):
    Class paths are normalized for searching. That means that class paths
    which are included in other class paths are removed.
    
2009-12-08 Markus Malkusch <markus@malkusch.de>

    * classes/Autoloader.php (Autoloader::searchPath()):
    Each searching for a class definition resets the max_execution_time.
    
    * classes/parser/AutoloaderFileParser.php (AutoloaderFileParser::isClassInFile()):
    The path for AutoloaderException_Parser_IO was wrong.
    
    * classes/parser/AutoloaderFileParser_Tokenizer.php (AutoloaderFileParser_Tokenizer::isClassInSource()):
    If the tokenizer fails it throws an AutoloaderException_Parser.
    
2009-11-29 Markus Malkusch <markus@malkusch.de>

    * classes/exception/AutoloaderException_SearchFailed.php (AutoloaderException_SearchFailed::getClass()):
    A method for getting the information which class couldn't be found.

2009-11-27 Markus Malkusch <markus@malkusch.de>

    * classes/index/AutoloaderIndex_SerializedHashtable.php (AutoloaderIndex_SerializedHashtable::save()):
    Raceconditions were possible during saving the index. Saving is done now atomically.